DSIVICA ;DSS/LM - Insurance card RPC's ;12/14/2004
 ;;2.2;INSURANCE CAPTURE BUFFER;**1,2,7**;May 19, 2009;Build 1
 ;Copyright 1995-2012, Document Storage Systems, Inc., All Rights Reserved
 ;
 ; Integration Agreements
 ;   2056   $$GET1^DIQ
 ;   5294   read access to file 355.33
 ;   5353   ACCEPAPI^IBCNICB,UPDTICB^IBCNICB
 Q
 ;
 ; 
ACCEPT(RESULT,IBBUFDA,DFN,IBDATA) ;RPC: DSIV ACCEPT BUFFER ENTRY
 ; IBBUFDA=INSURANCE BUFFER file internal entry number (required)
 ; DFN=PATIENT file internal entry number (required)
 ; IBDATA array containts the following variables and data:
 ;   IBINSDA=File 36 IEN if not adding new entry
 ;   IBGRPDA=File 355.3 IEN if not adding new entry
 ;   IBPOLDA=File 2.312 IEN if not adding new entry
 ;   IBMVINS=Type for INSURANCE 1=Merge, 2=Overwrite, 3=Replace, 4=(not supported)
 ;   IBMVGRP=Type for GROUP     1=Merge, 2=Overwrite, 3=Replace, 4=(not supported)
 ;   IBMVPOL=Type for POLICY    1=Merge, 2=Overwrite, 3=Replace, 4=(not supported)
 ;   IBNEWINS=Add new INSURANCE COMPANY flag (non-zero means add)
 ;   IBNEWGRP=Add new GROUP INSURANCE PLAN flag (non-zero means add)
 ;   IBNEWPOL=Add new patient insurance policy (non-zero means add)
 ;   IVMREPTR=File 301.91 IEN if applicable (IVM REASONS FOR NOT UPLOADING...)
 ;   DSIVAUDT=File 19625 IEN if updating patient policy or group plan COMMENT
 ;   IBELIG=to copy eIV report to pt elig/benefits 0=no,1=yes DSIV*2.2*2
 ; RESULT(0)=0 (zero) means success or -1^<error message> means failure.
 ;      Note that success may inclue one or more warnings in the
 ;      format 0^<warning message>[^<warning message>].  
 ;  Subsequent array values may contain the following 
 ;    IF new iens were generated by the call:
 ; RESULT(1)="IBINSDA^"_IBINSDA
 ; RESULT(2)="IBGRPDA^"_IBGRPDA
 ; RESULT(3)="IBPOLDA^"_IBPOLDA
 ; 
 N I,Y,X,IBINSDA,IBGRPDA,IBPOLDA,IBMVINS,IBMVGRP,IBMVPOL,IBNEWINS,IBNEWGRP,IBNEWPOL,IVMREPTR,DSIVAUDT,IBELIG,RESULTXT,J,K,RET
 ;preset variables, IBMV* variable are preset to REPLACE (2)
 S Y="IBINSDA,IBGRPDA,IBPOLDA,IBMVINS,IBMVGRP,IBMVPOL,IBNEWINS,IBNEWGRP,IBNEWPOL,IVMREPTR,DSIVAUDT,IBELIG"
 F I=1:1:12 S X=$P(Y,",",I),@X=$S($E(X,1,4)="IBMV":2,X="IBELIG":0,1:"")
 ;get variables from IBDATA array, only allow expected variables
 I $D(IBDATA)>1 N I,X F I=1:1 Q:'($D(IBDATA(I))#2)  D
 .S X=$P(IBDATA(I),U)
 .Q:'(",IBINSDA,IBGRPDA,IBPOLDA,IBMVINS,IBMVGRP,IBMVPOL,IBNEWINS,IBNEWGRP,IBNEWPOL,IVMREPTR,DSIVAUDT,IBELIG,"[(","_X_","))
 .S @(X_"=$P(IBDATA(I),U,2,99)") ;variable values if defined from gui
 .Q
 ;
 ;call IB API to process buffer
 D ACCEPAPI^IBCNICB(.RESULT,IBBUFDA,DFN,IBINSDA,IBGRPDA,IBPOLDA,IBMVINS,IBMVGRP,IBMVPOL,IBNEWINS,IBNEWGRP,IBNEWPOL,IVMREPTR,IBELIG) ;DSIV*2.2*2
 ;can't send multi-subscripted array back, put errors at the bottom DSIV 2.2T10
 S K=6 I $D(RESULT(1,"ERR")) S RESULT(K)="--INS filing errors--" D
 .S J=0 F  S J=$O(RESULT(1,"ERR",J)) Q:'J  S K=K+1,RESULTXT(K)=RESULT(1,"ERR",J)
 .Q
 I $D(RESULT(2,"ERR")) S K=K+1,RESULTXT(K)="--GRP filing errors--" D
 .S J=0 F  S J=$O(RESULT(2,"ERR",J)) Q:'J  S K=K+1,RESULTXT(K)=RESULT(2,"ERR",J)
 .Q
 I $D(RESULT(3,"ERR")) S K=K+1,RESULTXT(K)="--POL filing errors--" D
 .S J=0 F  S J=$O(RESULT(3,"ERR",J)) Q:'J  S K=K+1,RESULTXT(K)=RESULT(3,"ERR",J)
 .Q
 K RESULT(1,"ERR"),RESULT(2,"ERR"),RESULT(3,"ERR")
 I $G(RESULT(0)) G ACCEPTQ  ;error occurred, quit processing
 I 'DSIVAUDT G ACCEPTQ ;no audit record (bad data)
 ;if new entries were created, set up local values, RESULT(1)="IBINSDA^"_IBINSDA, etc
 I $O(RESULT(0)) S I=0 F  S I=$O(RESULT(I)) Q:'I  D
 .S X=$P(RESULT(I),U) Q:'(",IBINSDA,IBGRPDA,IBPOLDA,"[(","_X_","))
 .S @(X_"=$P(RESULT(I),U,2)")
 .Q
 ;process fields not stored in the buffer
 N DSIV,X,Y,I,DSIVPC,DSIVGC,DSIVPF,DSIVEP,DSIVPB,DSIVFTF,DSIVFTFV
 S Y="DSIVPF,DSIVEP,DSIVPB,DSIVFTF,DSIVFTFV" ;preset variables that may not be initialized
 F I=1:1:5 S X=$P(Y,",",I),@X=""
 D GETS^DIQ(19625,+DSIVAUDT,"4;4.1",,"DSIV")
 S DSIV=$NA(DSIV(19625,+DSIVAUDT_","))
 S DSIVPC=$G(@DSIV@(4)) ;Patient policy comment
 I $G(IBMVPOL)=3,DSIVPC="" S DSIVPC="@" ;force replace of field 1.08 DSIV*2.2*1T6
 I $G(@DSIV@(4.1,1))]"" D  ;Group plan comment (WP)
 .S I=0 F  S I=$O(@DSIV@(4.1,I)) Q:'I  S DSIVGC(I)=$G(@DSIV@(4.1,I))
 .Q
 ;format in field 5=$355.3;.13$INTERNAL VALUE and $355.3;.15$INTERNAL VALUE
 ;$355.3;.16$INTERNAL VALUE and $355.3;.17$INTERNAL VALUE
 K DSIV D GETS^DIQ(19625,+DSIVAUDT,"5",,"DSIV")
 S DSIV=$NA(DSIV(19625,+DSIVAUDT_",")) D:$O(@DSIV@(5,0))
 .S I=0 F  S I=$O(@DSIV@(5,I)) Q:'I  S X=@DSIV@(5,I) D:+$P(X,"$",2)=355.3
 ..I $P($P(X,"$",2),";",2)=.13 S DSIVPF=$P(X,"$",3) ;Freetext PLAN FILING TIME RANGE
 ..I $P($P(X,"$",2),";",2)=.15 S DSIVEP=$P(X,"$",3) ;Set of codes ELECTRONIC PLAN TYPE
 ..I $P($P(X,"$",2),";",2)=.16 S DSIVFTF=$P(X,"$",3) ;Pointer PLAN STD FTF
 ..I $P($P(X,"$",2),";",2)=.17 S DSIVFTFV=$P(X,"$",3) ;Freetext PLAN STD FTF VALUE
 ..I $G(IBMVGRP)=3,DSIVPF="" S DSIVPF="@" ;force replace of field .13 DSIV*2.2*1T6
 ..Q
 .Q
 ;format in field 7=$2.312;3.04$INTERNALVALUE
 K DSIV D GETS^DIQ(19625,+DSIVAUDT,"7",,"DSIV")
 S DSIV=$NA(DSIV(19625,+DSIVAUDT_",")) D:$O(@DSIV@(7,0))
 .S I=0 F  S I=$O(@DSIV@(7,I)) Q:'I  S X=@DSIV@(7,I) D:+$P(X,"$",2)=2.312
 ..I $P($P(X,"$",2),";",2)=3.04 S DSIVPB=$P(X,"$",3) ;Set of codes POLICY NOT BILLABLE
 ..Q
 .Q
 ;
 ;store insurance and edi billing fields in INSURANCE COMPANY FILE  DSIV*2.2*7 S4 5.22.2012 NCR
 N DSIVIENS,DSIVFVAL,DSIVIVAL,FLD,IE,DSIVUPD,I,CNTS,CNTR,DSIVDS,DSIVDR,DSIVERR,DSIVERRS,DSIVERRR,DSIVMULT,INSCOSYN,INSCORMK,SYNCNT,RMKCNT,DSIVWP,INS,ERR,ADDSYN
 S (DSIVIENS,DSIVFVAL,DSIVIVAL,FLD,IE,INSCOSYN,INSCORMK)="",(CNTS,CNTR,SYNCNT,RMKCNT,ADDSYN)=0
 ;store Insurance Company File synonym and remarks fields in arrays if this is a merge or an overwrite
 I $G(IBMVINS)'="3" D
 .K DSIVMULT D GETS^DIQ(36,+IBINSDA,"**","E","DSIVMULT")
 .S DSIVMULT=$NA(DSIVMULT(36,+IBINSDA_",")),SYNCNT=0,RMKCNT=0
 .K INSCOSYN,INSCORMK F  S DSIVMULT=$Q(@DSIVMULT) Q:DSIVMULT=""  D
 ..I $QS(DSIVMULT,1)=36.03 S SYNCNT=SYNCNT+1,INSCOSYN(SYNCNT)=@DSIVMULT   ;Insurance Company File synonyms
 ..I $QS(DSIVMULT,1)=36,$QS(DSIVMULT,3)=11,$QS(DSIVMULT,4)'="E" S RMKCNT=RMKCNT+1,INSCORMK(RMKCNT)=@DSIVMULT      ;Insurance Company File remarks
 ;
 S DSIVIENS=+IBINSDA_","
 K DSIV D GETS^DIQ(19625,+DSIVAUDT,"**","EI","DSIV")
 S DSIV=$NA(DSIV(19625,+DSIVAUDT_","))
 L +^DIC(36,+DSIVIENS):2 E  S RET(1)="-1^Unable to lock the Insurance Company File record - NO UPDATES" Q
 F  S DSIV=$Q(@DSIV) Q:DSIV=""  D
 .S DSIVFVAL=@DSIV
 .I $QS(DSIV,3)=6.01,$QS(DSIV,4)="I" S IE="I",FLD=2 D UPDINS(.DSIVIVAL,IBMVINS,FLD,IE,IBINSDA,DSIVFVAL) S DSIVUPD(36,DSIVIENS,2)=DSIVIVAL   ;SIGNATURE REQUIRED ON BILL
 .I $QS(DSIV,3)=6.02,$QS(DSIV,4)="I" S IE="I",FLD=.18 D UPDINS(.DSIVIVAL,IBMVINS,FLD,IE,IBINSDA,DSIVFVAL) S DSIVUPD(36,DSIVIENS,.18)=DSIVIVAL    ;STANDARD FTF
 .I $QS(DSIV,3)=6.03,$QS(DSIV,4)="E" S IE="E",FLD=.19 D UPDINS(.DSIVIVAL,IBMVINS,FLD,IE,IBINSDA,DSIVFVAL) S DSIVUPD(36,DSIVIENS,.19)=DSIVIVAL    ;STANDARD FTF VALUE
 .I $QS(DSIV,3)=6.04,$QS(DSIV,4)="E" S IE="E",FLD=.12 D UPDINS(.DSIVIVAL,IBMVINS,FLD,IE,IBINSDA,DSIVFVAL) S DSIVUPD(36,DSIVIENS,.12)=DSIVIVAL    ;FILING TIME FRAME
 .I $QS(DSIV,3)=6.05,$QS(DSIV,4)="I" S IE="I",FLD=.13 D UPDINS(.DSIVIVAL,IBMVINS,FLD,IE,IBINSDA,DSIVFVAL) S DSIVUPD(36,DSIVIENS,.13)=DSIVIVAL    ;TYPE OF COVERAGE
 .I $QS(DSIV,3)=6.06,$QS(DSIV,4)="I" S IE="I",FLD=3.01 D UPDINS(.DSIVIVAL,IBMVINS,FLD,IE,IBINSDA,DSIVFVAL) S DSIVUPD(36,DSIVIENS,3.01)=DSIVIVAL   ;TRANSMIT ELECTRONICALLY
 .I $QS(DSIV,3)=6.07,$QS(DSIV,4)="I" S IE="I",FLD=3.09 D UPDINS(.DSIVIVAL,IBMVINS,FLD,IE,IBINSDA,DSIVFVAL) S DSIVUPD(36,DSIVIENS,3.09)=DSIVIVAL   ;ELECTRONIC INSURANCE TYPE
 .I $QS(DSIV,3)=6.09,$QS(DSIV,4)="E" S IE="E",FLD=.119 D UPDINS(.DSIVIVAL,IBMVINS,FLD,IE,IBINSDA,DSIVFVAL) S DSIVUPD(36,DSIVIENS,.119)=DSIVIVAL   ;FAX NUMBER
 .;multiple field SYNONYM - don't allow duplicate synonyms
 .I $QS(DSIV,1)="19625.08",$QS(DSIV,4)="E" D
 ..S ADDSYN=1 F J=1:1 Q:$G(DSIVDS(36.03,"+"_J_","_DSIVIENS,.01))=""  I DSIVDS(36.03,"+"_J_","_DSIVIENS,.01)=DSIVFVAL S ADDSYN=0 Q 
 ..I ADDSYN=1,$G(IBMVINS)="3" S CNTS=CNTS+1,DSIVDS(36.03,"+"_CNTS_","_DSIVIENS,.01)=DSIVFVAL Q  ;replace - move all data from file 19625 to file 36
 ..S DSIVIVAL=$$GET1^DIQ(36.03,"1,"_DSIVIENS,.01)  ;field value from file 36
 ..I ADDSYN=1,$G(IBMVINS)="1",$G(DSIVIVAL)']"" S CNTS=CNTS+1,DSIVDS(36.03,"+"_CNTS_","_DSIVIENS,.01)=DSIVFVAL Q  ;merge if file 36 data is null
 ..I ADDSYN=1,$G(IBMVINS)="2",$G(DSIVFVAL)]"" S CNTS=CNTS+1,DSIVDS(36.03,"+"_CNTS_","_DSIVIENS,.01)=DSIVFVAL   ;overwrite if file 19625 data is not null
 .;word processing field REMARKS
 .I $QS(DSIV,3)=9,$QS(DSIV,4)?1N.N D
 ..I $G(IBMVINS)="3" S CNTR=CNTR+1,DSIVDR(CNTR)=DSIVFVAL Q  ;replace - move all data from file 19625 to file 36
 ..N DSIVWP S DSIVIVAL=$$GET1^DIQ(36,+DSIVIENS,11,,"DSIVWP")  ;field value from file 36
 ..I $G(IBMVINS)="1",'$D(DSIVWP) S CNTR=CNTR+1,DSIVDR(CNTR)=DSIVFVAL Q  ;merge if file 36 data is null
 ..I $G(IBMVINS)="2",$G(DSIVFVAL)]"" S CNTR=CNTR+1,DSIVDR(CNTR)=DSIVFVAL   ;overwrite if file 19625 data is not null
 ;if merge and synonym or remarks in insurance company file, save existing insurance company synonym and remarks
 I $G(IBMVINS)="1",$G(INSCOSYN(1))]"" F I=1:1:SYNCNT  S CNTS=CNTS+1,DSIVDS(36.03,"+"_CNTS_","_DSIVIENS,.01)=INSCOSYN(I)
 I $G(IBMVINS)="1",$G(INSCORMK(1))]"" F I=1:1:RMKCNT  S CNTR=CNTR+1,DSIVDR(CNTR)=INSCORMK(I)
 ;if overwrite and no synonym or remarks in audit file, save existing insurance company synonym and remarks
 I $G(IBMVINS)="2",CNTS=0 F I=1:1:SYNCNT  S CNTS=CNTS+1,DSIVDS(36.03,"+"_CNTS_","_DSIVIENS,.01)=INSCOSYN(I)
 I $G(IBMVINS)="2",CNTR=0 F I=1:1:RMKCNT  S CNTR=CNTR+1,DSIVDR(CNTR)=INSCORMK(I)
 ;if replace and no synonym or remarks in audit file, kill existing insurance company synonym or remarks
 N NULL,CNT
 S CNT=0 I $G(IBMVINS)="3",CNTS=0 F  S CNT=CNT+1 I $G(DSIVDS(36.03,"+"_CNT_","_DSIVIENS,.01))']"" S NULL("S")=1,DSIVDS(36.03,"+"_CNT_","_DSIVIENS,.01)=""  Q:NULL("S")
 S CNT=0 I $G(IBMVINS)="3",CNTR=0 F  S CNT=CNT+1 I $G(DSIVDR(CNT))']"" S NULL("R")=1,DSIVDR(CNT)="" Q:NULL("R")
 ;
 I $D(DSIVUPD) D FILE^DIE(,"DSIVUPD","DSIVERR")
 I $D(DSIVERR) S K=K+1,RESULTXT(K)="-1^INS CO-"_$G(DSIVERR("DIERR",1,"TEXT",1)),ERR(1)=1
 I $D(DSIVDS) K ^DIC(36,+DSIVIENS,10) I CNTS>0 D UPDATE^DIE(,"DSIVDS",,"DSIVERRS")
 I $D(DSIVERRS) S K=K+1,RESULTXT(K)="-1^INS CO SYN-"_$G(DSIVERRS("DIERR",1,"TEXT",1)),ERR(2)=1
 I $D(DSIVDR) K ^DIC(36,+DSIVIENS,11) I CNTR>0 D WP^DIE(36,DSIVIENS,11,,"DSIVDR","DSIVERRR")
 I $D(DSIVERRR) S K=K+1,RESULTXT(K)="-1^INS CO RMKS-"_$G(DSIVERRR("DIERR",1,"TEXT",1)),ERR(3)=1
 I '$D(ERR) S K=K+1,RESULTXT(K)="0^Insurance Company file updated successfully."
 L -^DIC(36,+DSIVIENS)
 ;
 I $$STOP G ACCEPTQ ;nothing (no variables) to edit
 ;
 ;call IB API to process additional fields updates files 2.312 and 355.3 if necessary
 ;errors may occur that need to be appended to RESULTS array
 K DSIV N CNT S CNT=$O(RESULT(99),-1)
 D UPDTICB^IBCNICB(.DSIV,DFN,IBPOLDA,IBGRPDA,DSIVPC,DSIVPB,DSIVPF,DSIVEP,.DSIVGC,DSIVFTF,DSIVFTFV)
 I $G(DSIV)<0 S CNT=CNT+1,RESULT(CNT)=DSIV ;add results to original array
 I $D(DSIV) S I=0 F  S I=$O(DSIV(I)) Q:'I  S CNT=CNT+1,RESULT(CNT)=DSIV(I)
ACCEPTQ ;quit
 M:$D(RESULTXT) RESULT=RESULTXT
 Q
STOP() ;check to see if there's anything to update
 N X,Y,I,OK S Y="DSIVPC,DSIVPF,DSIVEP,DSIVPB,DSIVFTF,DSIVFTFV",OK=0
 F I=1:1:6 S X=$P(Y,",",I) I @X]"" S OK=1
 I $D(DSIVGC) S OK=1
 Q 'OK
 ;
UPDINS(DSIVIVAL,IBMVINS,FLD,IE,IBINSDA,DSIVFVAL) ;determine insurance co field value
 ;Returns the value of the insurance company field indicated by FLD after merge/overwrite/replace processing
 ;IBMVINS - merge/overwrite/replace indicator
 ;FLD - field number from Insurance Company File
 ;IE - "I" or "E" to indicate return of internal or external value
 ;IBINSDA - IEN of Insurance Company File
 ;DSIVFVAL - value of field in file 19625 DSIV ICB Audit file
 ;DSIVIVAL - value of field to be stored in file 36 Insurance Company File
 S DSIVIVAL=""
 I $G(IBMVINS)="3" S DSIVIVAL=$G(DSIVFVAL) Q                   ;replace - move all data from file 19625 to file 36
 S DSIVIVAL=$$GET1^DIQ(36,+IBINSDA,FLD,IE)                     ;field value from file 36
 I $G(IBMVINS)="1",$G(DSIVIVAL)']"" S DSIVIVAL=$G(DSIVFVAL) Q  ;merge if file 36 data is null
 I $G(IBMVINS)="2",$G(DSIVFVAL)]"" S DSIVIVAL=$G(DSIVFVAL) Q   ;overwrite if file 19625 data is not null
 Q
